{"remainingRequest":"/Users/isaac/Documents/workSpace/statistics-web/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js!/Users/isaac/Documents/workSpace/statistics-web/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/isaac/Documents/workSpace/statistics-web/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js??ref--0-0!/Users/isaac/Documents/workSpace/statistics-web/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js??vue-loader-options!/Users/isaac/Documents/workSpace/statistics-web/src/views/mainPage/stats.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/isaac/Documents/workSpace/statistics-web/src/views/mainPage/stats.vue","mtime":1627476602000},{"path":"/Users/isaac/Documents/workSpace/statistics-web/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/isaac/Documents/workSpace/statistics-web/node_modules/_thread-loader@2.1.3@thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/isaac/Documents/workSpace/statistics-web/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/isaac/Documents/workSpace/statistics-web/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/isaac/Documents/workSpace/statistics-web/node_modules/_vue-loader@15.9.6@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9pc2FhYy9Eb2N1bWVudHMvd29ya1NwYWNlL3N0YXRpc3RpY3Mtd2ViL25vZGVfbW9kdWxlcy9fQGJhYmVsX3J1bnRpbWVANy4xNC44QEBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgbG9kaW5nIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbG9kaW5nJzsKaW1wb3J0IHsgZ2V0RG9jdG9yRHJ1Z3MgYXMgX2dldERvY3RvckRydWdzIH0gZnJvbSAnLi4vLi4vYXBpL21haW5BcGknOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInN0YXRzIiwKICBjb21wb25lbnRzOiB7CiAgICBsb2Rpbmc6IGxvZGluZwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3d0eXBlOiAxLAogICAgICBzaG93TG9kaW5nOiBmYWxzZSwKICAgICAgc3RhdHNMaXN0OiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNob3dUeXBlKDEpOyAvL+m7mOiupOWxleekuuW9k+WJjeeUqOaIt+e7n+iuoeeahOaVsOaNrgoKICAgIHRoaXMuZ2V0RG9jdG9yRHJ1Z3MoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8v5YiH5o2i5pi+56S65pWw5o2u5p2l5rqQIDEt5b2T5YmN55So5oi3ICAyLeaJgOacieaVsOaNrgogICAgc2hvd1R5cGU6IGZ1bmN0aW9uIHNob3dUeXBlKHR5cGUpIHsKICAgICAgdGhpcy5zaG93dHlwZSA9IHR5cGU7CiAgICB9LAogICAgZ2V0RG9jdG9yRHJ1Z3M6IGZ1bmN0aW9uIGdldERvY3RvckRydWdzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgZGF0YTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBfZ2V0RG9jdG9yRHJ1Z3MoKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICAgICAgaWYgKGRhdGEuZGF0YS5jb2RlID09PSAyMDApIHsKICAgICAgICAgICAgICAgICAgX3RoaXMuZG9EYXRhKGRhdGEuZGF0YS5yZXN1bHQpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZG9EYXRhOiBmdW5jdGlvbiBkb0RhdGEoZGF0YSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIGRhdGEubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgdmFyIGluZGV4ID0gX3RoaXMyLnN0YXRzTGlzdC5maW5kSW5kZXgoZnVuY3Rpb24gKHkpIHsKICAgICAgICAgIHJldHVybiB4LmRydWdzX2lkID09IHkuZHJ1Z3NfaWQ7CiAgICAgICAgfSk7CgogICAgICAgIGlmIChpbmRleCAhPSAtMSkgX3RoaXMyLnN0YXRzTGlzdFtpbmRleF0uZG9jdG9yLnB1c2goewogICAgICAgICAgZG9jdG9yTmFtZTogeC5kbmFtZSwKICAgICAgICAgIG51bTogeFsnU1VNKGRkLm51bSknXQogICAgICAgIH0pO2Vsc2UgX3RoaXMyLnN0YXRzTGlzdC5wdXNoKHsKICAgICAgICAgIGRydWdzX2lkOiB4LmRydWdzX2lkLAogICAgICAgICAgcm5hbWU6IHgucm5hbWUsCiAgICAgICAgICBkb2N0b3I6IFt7CiAgICAgICAgICAgIGRvY3Rvck5hbWU6IHguZG5hbWUsCiAgICAgICAgICAgIG51bTogeFsnU1VNKGRkLm51bSknXQogICAgICAgICAgfV0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["stats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,MAAA,MAAA,yBAAA;AACA,SAAA,cAAA,IAAA,eAAA,QAAA,mBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,CADA;AAEA,MAAA,UAAA,EAAA,KAFA;AAIA,MAAA,SAAA,EAAA;AAJA,KAAA;AAMA,GAVA;AAWA,EAAA,OAXA,qBAWA;AACA,SAAA,QAAA,CAAA,CAAA,EADA,CACA;;AACA,SAAA,cAAA;AACA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,IAFA,EAEA;AACA,WAAA,QAAA,GAAA,IAAA;AACA,KAJA;AAKA,IAAA,cALA,4BAKA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,eAAA,EADA;;AAAA;AACA,gBAAA,IADA;;AAEA,oBAAA,IAAA,CAAA,IAAA,CAAA,IAAA,KAAA,GAAA,EAAA;AACA,kBAAA,KAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA;AACA;;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KAVA;AAWA,IAAA,MAXA,kBAWA,IAXA,EAWA;AAAA;;AACA,MAAA,IAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,YAAA,KAAA,GAAA,MAAA,CAAA,SAAA,CAAA,SAAA,CAAA,UAAA,CAAA,EAAA;AAAA,iBAAA,CAAA,CAAA,QAAA,IAAA,CAAA,CAAA,QAAA;AAAA,SAAA,CAAA;;AACA,YAAA,KAAA,IAAA,CAAA,CAAA,EACA,MAAA,CAAA,SAAA,CAAA,KAAA,EAAA,MAAA,CAAA,IAAA,CAAA;AACA,UAAA,UAAA,EAAA,CAAA,CAAA,KADA;AAEA,UAAA,GAAA,EAAA,CAAA,CAAA,aAAA;AAFA,SAAA,EADA,KAMA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA;AACA,UAAA,QAAA,EAAA,CAAA,CAAA,QADA;AAEA,UAAA,KAAA,EAAA,CAAA,CAAA,KAFA;AAGA,UAAA,MAAA,EAAA,CAAA;AACA,YAAA,UAAA,EAAA,CAAA,CAAA,KADA;AAEA,YAAA,GAAA,EAAA,CAAA,CAAA,aAAA;AAFA,WAAA;AAHA,SAAA;AAQA,OAhBA;AAiBA;AA7BA;AAfA,CAAA","sourcesContent":["<template>\n  <div id=\"stats\">\n    <div class=\"conditionout\">\n      <div class=\"condmsg\">\n        <div class=\"condiitem\">用户名：****</div>\n        <div class=\"condiitem\">当前月份：****</div>\n        <div class=\"condiitem\">当月统计总数：****条</div>\n        <div class=\"condiitem\">我的统计总数：****条</div>\n      </div>\n      <div class=\"condoption\">\n        <span :class=\"{'spanactive':showtype === 1}\" @click=\"showType(1)\">查看我的</span>\n        <span :class=\"{'spanactive':showtype === 2}\" @click=\"showType(2)\">查看全部</span>\n        <span>打 印</span>\n      </div>\n    </div>\n    <div class=\"dataout\">\n      <div class=\"statslist\" v-for=\"stats in statsList\" :key=\"stats.id\">\n        <div class=\"statstit\">{{stats.rname}}</div>\n        <div class=\"statscon\" v-for=\"node in stats.doctor\" :key=\"node.id\">{{node.doctorName}}：{{node.num}}</div>\n      </div>\n      <loding v-show=\"showLoding\"></loding>\n    </div>\n  </div>\n</template>\n\n<script>\nimport loding from '../../components/loding'\nimport { getDoctorDrugs } from '../../api/mainApi'\nexport default {\n  name: \"stats\",\n  components:{loding},\n  data(){\n    return{\n      showtype:1,\n      showLoding:false,\n\n      statsList:[]\n    }\n  },\n  mounted() {\n    this.showType(1);//默认展示当前用户统计的数据\n    this.getDoctorDrugs();\n  },\n  methods:{\n    //切换显示数据来源 1-当前用户  2-所有数据\n    showType(type){\n      this.showtype = type;\n    },\n    async getDoctorDrugs (){\n      const data = await getDoctorDrugs();\n      if (data.data.code === 200){\n        this.doData(data.data.result)\n      }\n    },\n    doData(data){\n      data.map(x=>{\n        let index = this.statsList.findIndex(y=>{ return x.drugs_id == y.drugs_id })\n        if (index != -1)\n          this.statsList[index].doctor.push({\n            doctorName:x.dname,\n            num:x['SUM(dd.num)']\n          })\n        else\n          this.statsList.push({\n            drugs_id:x.drugs_id,\n            rname:x.rname,\n            doctor:[{\n              doctorName:x.dname,\n              num:x['SUM(dd.num)']\n            }]\n          });\n      })\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  #stats{\n    width: 100%;\n    height: 100vh;\n    background-image: url(\"../../assets/img/mainbg.jpeg\");\n    background-position: center;\n    background-size: 100%;\n    overflow-y: auto;\n    .conditionout{\n      width: 80%;\n      min-height: 100px;\n      background-color: #ffffff;\n      border-radius: 20px;\n      margin: 20px auto;\n      padding: 20px;\n      .condiitem{\n        font-size: 18px;\n        color: #999999;\n        width: 30%;\n        padding: 10px;\n        display: inline-block;\n      }\n      .condoption{\n        padding-top: 30px;\n        text-align: center;\n        span{\n          padding: 8px 15px;\n          background-color: #999999;\n          border-radius: 10px;\n          margin: 0 20px;\n          cursor: pointer;\n        }\n        .spanactive{\n          color: #ffffff;\n          background-color: #67c23a;\n        }\n      }\n    }\n    .dataout{\n      width: 80%;\n      min-height: 600px;\n      background-color: #ffffff;\n      border-radius: 20px;\n      margin: 0 auto;\n      margin-bottom: 20px;\n      padding: 20px;\n      position: relative;\n      .statslist{\n        padding: 20px;\n        display: inline-block;\n        vertical-align: top;\n        .statstit{\n          text-align: center;\n          font-size: 18px;\n          font-weight: bold;\n          color: #222222;\n        }\n        .statscon{\n          padding-top: 10px;\n          text-align: center;\n          font-size: 14px;\n          color: #999999;\n        }\n      }\n    }\n  }\n</style>"],"sourceRoot":"src/views/mainPage"}]}