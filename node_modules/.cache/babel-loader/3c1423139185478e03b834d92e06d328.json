{"remainingRequest":"/Users/isaac/Documents/workSpace/hospital-web/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js!/Users/isaac/Documents/workSpace/hospital-web/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js??ref--13-0!/Users/isaac/Documents/workSpace/hospital-web/src/api/interceptors.js","dependencies":[{"path":"/Users/isaac/Documents/workSpace/hospital-web/src/api/interceptors.js","mtime":1631873394416},{"path":"/Users/isaac/Documents/workSpace/hospital-web/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/isaac/Documents/workSpace/hospital-web/node_modules/_babel-loader@8.2.2@babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/isaac/Documents/workSpace/hospital-web/node_modules/_eslint-loader@2.2.1@eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9pc2FhYy9Eb2N1bWVudHMvd29ya1NwYWNlL2hvc3BpdGFsLXdlYi9ub2RlX21vZHVsZXMvX0BiYWJlbF9ydW50aW1lQDcuMTQuOEBAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKLy8gYXhpb3MKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy8g6Lev55SxCgppbXBvcnQgcm91dGVyIGZyb20gJy4uL3JvdXRlcic7IC8vIGxvYWRpbmcKCmltcG9ydCB7IExvYWRpbmcsIE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJzsKdmFyIGxvYWRpbmdJbml0OyAvLyDmt7vliqDor7fmsYLlkozlk43lupTmi6bmiKrlmagKCmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoKSB7CiAgLy8g6YWN572u6K+35rGCCiAgLy8gbGV0IGNhbmNlbFRva2VuID0gYXhpb3MuQ2FuY2VsVG9rZW47CiAgLy8gbGV0IHNvdXJjZSA9IGNhbmNlbFRva2VuLnNvdXJjZSgpOwogIC8vIOa3u+WKoOivt+axguaLpuaIquWZqAogIGF4aW9zLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgICAvLyBMb2FkaW5nCiAgICBpZiAoY29uZmlnLmhlYWRlcnMubmVlZExvYWRpbmcpIHsKICAgICAgbG9hZGluZ0luaXQgPSBMb2FkaW5nLnNlcnZpY2UoewogICAgICAgIGxvY2s6IHRydWUsCiAgICAgICAgdGV4dDogJ+WKoOi9veS4rcK3wrfCtycsCiAgICAgICAgc3Bpbm5lcjogJ2VsLWljb24tbG9hZGluZycsCiAgICAgICAgYmFja2dyb3VuZDogJ3JnYmEoMCwgMCwgMCwgMC43KScKICAgICAgfSk7CiAgICB9IC8v5omA5pyJ55qE6K+35rGC5Lit6YWN572u55qE5piv5ZCM5LiA5LiqY2FuY2VsVG9rZW7vvIzmiYDku6XlnKjkuYvlkI7nmoTmiYDmnInor7fmsYLpg73kvJrnm7TmjqXmiafooYxvbkNhbmNlbGVk5pa55rOVICAgICAgICBjb25maWcuY2FuY2VsVG9rZW4gPSBzb3VyY2UudG9rZW47CgoKICAgIGlmIChjb25maWcuaGVhZGVycy5maWxlKSB7CiAgICAgIGNvbmZpZy5oZWFkZXJzWyJDb250ZW50LXR5cGUiXSA9ICJtdWx0aXBhcnQvZm9ybS1kYXRhIjsKICAgIH0gZWxzZSB7CiAgICAgIGNvbmZpZy5oZWFkZXJzWyJDb250ZW50LXR5cGUiXSA9ICJhcHBsaWNhdGlvbi9qc29uIjsKICAgIH0gLy8g5re75YqgdG9rZW4KCgogICAgY29uZmlnLmhlYWRlcnNbJ1gtVG9rZW4nXSA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpOwogICAgcmV0dXJuIGNvbmZpZzsKICB9LCBmdW5jdGlvbiAoZXJyb3IpIHsKICAgIC8vIOWvueivt+axgumUmeivr+WBmuS6m+S7gOS5iAogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICB9KTsgLy8g5re75Yqg5ZON5bqU5oum5oiq5ZmoCgogIGF4aW9zLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZXNwb25zZSkgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgLy8g5YWz6ZetbG9hZGluZwogICAgICAgICAgICAgIGxvYWRpbmdJbml0ICYmIGxvYWRpbmdJbml0LmNsb3NlKCk7IC8vIOe7n+S4gOWkhOeQhumdnjIwMOeahOmUmeivr+WkhOeQhgoKICAgICAgICAgICAgICBpZiAoIShyZXNwb25zZS5kYXRhLmNvZGUgJiYgcmVzcG9uc2UuZGF0YS5jb2RlICE9PSAyMDApKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgTWVzc2FnZS5lcnJvcih7CiAgICAgICAgICAgICAgICBtZXNzYWdlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UsCiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMTAwMAogICAgICAgICAgICAgIH0pOyAvLyDlr7nlk43lupTmlbDmja40MDHlgZrngrnku4DkuYgKCiAgICAgICAgICAgICAgaWYgKCEocmVzcG9uc2UuZGF0YS5jb2RlID09PSA0MDEpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgIHBhdGg6ICcvbG9naW4nCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgUHJvbWlzZS5yZWplY3QoKSk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzcG9uc2UpOwoKICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCksIGZ1bmN0aW9uIChlcnJvcikgewogICAgaWYgKGVycm9yLnJlc3BvbnNlLmRhdGEuY29kZSA9PSA0MDEpIHsKICAgICAgd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOwogICAgICByb3V0ZXIucHVzaCh7CiAgICAgICAgcGF0aDogJy9sb2dpbicKICAgICAgfSk7CiAgICB9IC8vIOWFs+mXrWxvYWRpbmcKCgogICAgbG9hZGluZ0luaXQgJiYgbG9hZGluZ0luaXQuY2xvc2UoKTsgLy8g5a+55ZON5bqU6ZSZ6K+v5YGa54K55LuA5LmICgogICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTsKICB9KTsKfSk7"},{"version":3,"sources":["/Users/isaac/Documents/workSpace/hospital-web/src/api/interceptors.js"],"names":["axios","router","Loading","Message","loadingInit","interceptors","request","use","config","headers","needLoading","service","lock","text","spinner","background","file","localStorage","getItem","error","Promise","reject","response","close","data","code","message","duration","push","path","window","removeItem"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CACA;;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,YAAjC;AAEA,IAAIC,WAAJ,C,CAEA;;AACA,gBAAe,YAAM;AACjB;AACA;AACA;AACA;AACAJ,EAAAA,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAACC,MAAD,EAAY;AACvC;AACA,QAAIA,MAAM,CAACC,OAAP,CAAeC,WAAnB,EAAgC;AAC5BN,MAAAA,WAAW,GAAGF,OAAO,CAACS,OAAR,CAAgB;AAC1BC,QAAAA,IAAI,EAAE,IADoB;AAE1BC,QAAAA,IAAI,EAAE,QAFoB;AAG1BC,QAAAA,OAAO,EAAE,iBAHiB;AAI1BC,QAAAA,UAAU,EAAE;AAJc,OAAhB,CAAd;AAMH,KATsC,CAUvC;;;AACA,QAAIP,MAAM,CAACC,OAAP,CAAeO,IAAnB,EAAwB;AACpBR,MAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,qBAAjC;AACH,KAFD,MAEK;AACDD,MAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,kBAAjC;AACH,KAfsC,CAgBvC;;;AACAD,IAAAA,MAAM,CAACC,OAAP,CAAe,SAAf,IAA4BQ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA5B;AACA,WAAOV,MAAP;AACH,GAnBD,EAmBG,UAACW,KAAD,EAAW;AACV;AACA,WAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAtBD,EALiB,CA4BjB;;AACAnB,EAAAA,KAAK,CAACK,YAAN,CAAmBiB,QAAnB,CAA4Bf,GAA5B;AAAA,uEAAgC,iBAAOe,QAAP;AAAA;AAAA;AAAA;AAAA;AAC5B;AACAlB,cAAAA,WAAW,IAAIA,WAAW,CAACmB,KAAZ,EAAf,CAF4B,CAG5B;;AAH4B,oBAIxBD,QAAQ,CAACE,IAAT,CAAcC,IAAd,IAAsBH,QAAQ,CAACE,IAAT,CAAcC,IAAd,KAAuB,GAJrB;AAAA;AAAA;AAAA;;AAKxBtB,cAAAA,OAAO,CAACgB,KAAR,CAAc;AACVO,gBAAAA,OAAO,EAAEJ,QAAQ,CAACE,IAAT,CAAcE,OADb;AAEVC,gBAAAA,QAAQ,EAAE;AAFA,eAAd,EALwB,CASxB;;AATwB,oBAUpBL,QAAQ,CAACE,IAAT,CAAcC,IAAd,KAAuB,GAVH;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAgBdxB,MAAM,CAAC2B,IAAP,CAAY;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAZ,CAhBc;;AAAA;AAAA,+CAkBjBT,OAAO,CAACC,MAAR,EAlBiB;;AAAA;AAAA,+CAqBjBC,QArBiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhC;;AAAA;AAAA;AAAA;AAAA,OAuBG,UAACH,KAAD,EAAW;AACV,QAAIA,KAAK,CAACG,QAAN,CAAeE,IAAf,CAAoBC,IAApB,IAA0B,GAA9B,EAAmC;AAC/BK,MAAAA,MAAM,CAACb,YAAP,CAAoBc,UAApB,CAA+B,OAA/B;AACA9B,MAAAA,MAAM,CAAC2B,IAAP,CAAY;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAZ;AACH,KAJS,CAKV;;;AACAzB,IAAAA,WAAW,IAAIA,WAAW,CAACmB,KAAZ,EAAf,CANU,CAOV;;AACA,WAAOH,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAhCD;AAiCH,CA9DD","sourcesContent":["// axios\r\nimport axios from 'axios';\r\n// 路由\r\nimport router from '../router';\r\n// loading\r\nimport { Loading, Message } from 'element-ui';\r\n\r\nlet loadingInit;\r\n\r\n// 添加请求和响应拦截器\r\nexport default () => {\r\n    // 配置请求\r\n    // let cancelToken = axios.CancelToken;\r\n    // let source = cancelToken.source();\r\n    // 添加请求拦截器\r\n    axios.interceptors.request.use((config) => {\r\n        // Loading\r\n        if (config.headers.needLoading) {\r\n            loadingInit = Loading.service({\r\n                lock: true,\r\n                text: '加载中···',\r\n                spinner: 'el-icon-loading',\r\n                background: 'rgba(0, 0, 0, 0.7)'\r\n            });\r\n        }\r\n        //所有的请求中配置的是同一个cancelToken，所以在之后的所有请求都会直接执行onCanceled方法        config.cancelToken = source.token;\r\n        if (config.headers.file){\r\n            config.headers[\"Content-type\"] = \"multipart/form-data\";\r\n        }else{\r\n            config.headers[\"Content-type\"] = \"application/json\";\r\n        }\r\n        // 添加token\r\n        config.headers['X-Token'] = localStorage.getItem('token');\r\n        return config\r\n    }, (error) => {\r\n        // 对请求错误做些什么\r\n        return Promise.reject(error);\r\n    });\r\n    // 添加响应拦截器\r\n    axios.interceptors.response.use(async (response) => {\r\n        // 关闭loading\r\n        loadingInit && loadingInit.close();\r\n        // 统一处理非200的错误处理\r\n        if (response.data.code && response.data.code !== 200) {\r\n            Message.error({\r\n                message: response.data.message,\r\n                duration: 1000\r\n            });\r\n            // 对响应数据401做点什么\r\n            if (response.data.code === 401) {\r\n                // 取消所有请求\r\n                //source.cancel();\r\n                // 取消请求之后，重新配置source\r\n                // cancelToken = axios.CancelToken;\r\n                // source = cancelToken.source();\r\n                await router.push({ path: '/login' });\r\n            }\r\n            return Promise.reject()\r\n        }else{\r\n            //请求成功才回调\r\n            return response;\r\n        }\r\n    }, (error) => {\r\n        if (error.response.data.code==401) {\r\n            window.localStorage.removeItem('token')\r\n            router.push({ path: '/login' });\r\n        }\r\n        // 关闭loading\r\n        loadingInit && loadingInit.close();\r\n        // 对响应错误做点什么\r\n        return Promise.reject(error);\r\n    });\r\n};\r\n"]}]}